counties
data(counties)
data("counties")
counties <- readRDS("~/Desktop/DataCamp/Data manipulation with dplyr/counties.rds")
data(counties)
library(dplyr)
counties = readRDS("counties.rds")
counties %>% select(state, county, population, unemployment)
str(counties)
head(str(counties))
head(str(counties), 6)
glimpse(counties)
counties %>% select(state, county, population, poverty)
counties_selected <-
counties %>% select(state, county, population, unemployment)
counties_selected
counties_selected %>% arrange(population)
counties_selected %>% arrange(-population)
counties_selected %>% arrange(desc(population))
counties_selected %>%
arrange(desc(population)) %>%
filter(state == "New York")
counties_selected %>%
arrange(desc(population)) %>%
filter(unemployment < 6)
counties_selected %>%
arrange(desc(population)) %>%
filter(state == "New York") %>%
filter(unemployment < 6)
counties_selected %>%
arrange(desc(population)) %>%
filter(state == "New York", unemployment < 6)
counties_selected <- counties %>%
select(state, county, population, private_work, public_work, self_employed)
# Add a verb to sort in descending order of public_work
counties_selected %>% arrange(desc(public_work))
counties_selected <- counties %>%
select(state, county, population)
counties_selected %>% filter(population == "1000000")
counties_selected %>% filter(population > "1000000")
counties_selected %>% filter(population > 1000000)
# Filter for counties with a population above 1000000
counties_selected %>% filter(state == "California",
population > 1000000)
counties_selected %>% filter(state == "California",
population > 1000000)
counties_selected <- counties %>%
select(state, county, population, private_work, public_work, self_employed)
counties_selected %>% filter(state = "Texas",
population > 10000) %>%
arrange(-private_work)
counties_selected %>% filter(state == "Texas",
population > 10000) %>%
arrange(-private_work)
counties_selected <- counties %>%
select(state, county, population, unemployment)
counties_selected %>% muatate( unemployed_population = population * unempleyment/100)
counties_selected %>%
mutate(unemployed_population = population * unempleyment/100)
counties_selected <- counties %>%
select(state, county, population, unemployment)
counties_selected %>%
mutate(unemployed_population = population * unempleyment / 100)
counties_selected %>%
mutate(unemployed_population = population * unemployment / 100)
counties_selected %>%
mutate(unemployed_population = population * unemployment / 100) %>%
arrange(desc(unemployed_population))
counties_selected <- counties %>%
select(state, county, population, public_work)
counties_selected <- counties %>%
select(state, county, population, public_work)
head(counties_selected)
counties_selected %>%
mutate(public_workers = population * public_work / 100)
counties_selected %>%
mutate(public_workers = population * public_work / 100) %>%
arrange(-public_work)
counties_selected %>%
mutate(public_workers = population * public_work / 100) %>%
arrange(-public_workers)
counties %>%
# Select the five columns
select(state, county, population, men, women)
# Add the proportion_men variable
mutate(proportion_men = men / population)
counties %>%
# Select the five columns
select(state, county, population, men, women)
mutate(proportion_men = men / population)
counties %>%
# Select the five columns
select(state, county, population, men, women) %>%
# Add the proportion_men variable
mutate(proportion_men = men / population) %>%
# Filter for population of at least 10,000
filter(population >= 10000) %>%
# Arrange proportion of men in descending order
arrange(-proportion_men)
